# INSTALL a DNS server from Docker


#pull the latest image from docker hub

docker pull coredns/coredns:latest


# configure your local server

#create a configuration directory from your local server

mkdir -p /opt/coredns/config

#create your dns configuration file

cd /opt/coredns/config
vi Corefie

# forward everything to global Internet dns servers
.:53 {
  forward . 1.1.1.1 9.9.9.9
  log
  errors
}

# resolution of our local area network
mynet.local:53 {
    file /root/db.mynet.local
    log
    errors
}

#Create a db file 
cd
/opt/coredns/config/

vi db.mynet.local

mynet.local.        IN  SOA dns.mynet.local. gr.mynet.local. 1970010100 3600 1209600 3600

dns.mynet.local.         IN  A          192.168.0.10
mynas.mynet.local.     IN  A          192.168.0.11
backup.mynet.local.    IN  CNAME  mynas.mynet.local.


# create a reverse zone

cd /opt/coredns/config
vi Corefie

#Add the following lines

192.168.0.0/24 {
  file /root/db.192
  log
  errors
}

#Coredns will translate this zone to 192.168.0.0/24 = 0.168.192.in-addr.arpa.

# the db file /root/db.192

# this is a short writing db reverse file
$TTL    604800
@   IN      SOA     ns.mynet.local. admin.mynet.local. (
                              2
                         604800
                          86400
                        2419200
                         604800 )
;

      IN      NS      ns.mynet.local.
10   IN      PTR     ns.mynet.local.
11   IN      PTR     mynas.mynet.local.


#full config for better understanding
$TTL    604800
0.168.192.in-addr.arpa.   IN      SOA     ns.mynet.local. admin.mynet.local. (
                              2
                         604800
                          86400
                        2419200
                         604800 )
;

      IN      NS      ns.mynet.local.
10.0.168.192.in-addr.arpa.    IN      PTR     ns.mynet.local.
11.0.168.192.in-addr.arpa.    IN      PTR     mynas.mynet.local.

#start docker coredns container

 docker run -d \
 --name myprivatedns \
 --restart=always \ 
 --volume=/opt/coredns/config:/root/ \ 
 -p 53:53/udp \
 -p 53:53/tcp \
 coredns/coredns \ 
 -conf /root/Corefile
 
 
# if needed bind the port 53 to your IP address
# modify your resolv.conf file or your dhcp settings
 
# you can disable system resolver
systemctl disable resolvconf.service
systemctl disable  systemd-resolved.service
 
 # tests
 
 dig
 nslookup
 ping
 
 #example

# FQDN resolving
#with nslookup
nslookup mynas.mynet.local 192.168.0.10
Serveur :   ns.mynet.local
Address:  192.168.0.10

Nom :    ns.mynet.local
Address:  192.168.0.11
Aliases:  mynas.mynet.local

# with dig
dig @192.168.0.10 mynas.mynet.local
....
;; ANSWER SECTION:
mynas.mynet.local.       3600    IN      A   192.168.0.11
.....

# IP addr resolving

# with nslookup
nslookup 192.168.0.11 192.168.0.10
Serveur :   ns.mynet.local
Address:  192.168.0.10

Nom :   mynas.mynet.local
Address:  192.168.0.11

 #with dig
 dig  @192.168.0.10 -x 192.168.0.11
 .....
 ;; ANSWER SECTION:
11.0.168.192.in-addr.arpa. 604800 IN   PTR     mynas.mynet.local.
.....

 check docker logs
 docker container logs myprivatedns
 
 
 LINKS
 https://wiki.debian.org/Bind9#File_.2Fetc.2Fbind.2Fnamed.conf.default-zones
 https://awesomeopensource.com/project/coredns/coredns
 https://www.apnic.net/about-apnic/corporate-documents/documents/resource-guidelines/reverse-zones/